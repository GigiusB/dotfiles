#!/bin/bash
# Copyright (c) 2015 Stefano Apostolico s.apostolico@gmail.com
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

upsearch () {
  slashes=${PWD//[^\/]/}
  directory="$PWD"
  for (( n=${#slashes}; n>0; --n ))
  do
    test -e "$directory/$1" && echo "$directory/$1" && return 1
    directory="$directory/.."
  done
}
help(){
  echo "$0 wrapper"
  echo "Copyright 2016 - stefano apostolico"
  echo "Usage: $0 [input] [options]"
  cat << END

    Global Options
      -h, --help                Displays this information
      --type <js|css>           Specifies the type of the input file
      --charset <charset>       Read the input file using <charset>
      --line-break <column>     Insert a line break after the specified column number
      --ignore-no-yui           run even if .no-yui file is found
      -v, --verbose             Display informational messages and warnings
      -o <file>                 Place the output into <file>. Defaults to stdout.
                                Multiple files can be processed using the following syntax:
                                java -jar yuicompressor.jar -o '.css$:-min.css' *.css
                                java -jar yuicompressor.jar -o '.js$:-min.js' *.js

    JavaScript Options
      --nomunge                 Minify only, do not obfuscate
      --preserve-semi           Preserve all semicolons
      --disable-optimizations   Disable all micro optimizations

    If no input file is specified, it defaults to stdin. In this case, the 'type'
    option is required. Otherwise, the 'type' option is required only if the input
    file extension is neither 'js' nor 'css'.
END
  }

RESPECT_NO_YUI=true
ARGS=""
declare -a IGNORE=('.min.js' '.min.css' 'gulpFile.js' 'test_.*' '*casper*' '.*bundle.*' )

while [[ $# > 0 ]]
do
key="$1"
case $key in
    -v|--verbose)
        VERBOSE="$2"
        shift
    ;;
    -h|--help)
        help
        shift
    ;;
    -o|--output)
        OUTPUT=$2
        shift
    ;;
    --ignore-no-yui)
        RESPECT_NO_YUI=false
    ;;
    --nomunge|--preserve-semi|--nomunge|disable-optimizations)
        ARGS="$ARGS $key"
    ;;
    default)
        ARGS="$ARGS $key $2"
        shift
    ;;
    *)
        INPUT="$key"
    ;;
esac
shift
done
if [[ "$RESPECT_NO_YUI"=true ]]; then
    upsearch ".no-yui" || (echo "Skipped" && exit 1)
fi
index=0
FILE=`basename "$INPUT"`
while [[ "$i" -lt "${#IGNORE[@]}" ]]; do
  [[ "$FILE" =~ "${IGNORE[$i]}" ]] && exit 0
  ((i++))
done

if [[ $PWD == *node_modules* ]]; then
   exit 0
fi

if [[ ! -f "$INPUT" ]]; then
    echo "File not found: '$INPUT'"
    exit 1
fi

if [[ -z "$OUTPUT" ]];then
    OUTPUT="${INPUT%.*}.min.${INPUT##*.}"
fi
YUI_JAR=$HOME/bin/yuicompressor-2.4.7.jar


echo java -jar $YUI_JAR $ARGS -o "$OUTPUT" "$INPUT"
java -jar $YUI_JAR $ARGS -o "$OUTPUT" "$INPUT"
